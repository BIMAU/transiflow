name: Run tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.x]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt

    - name: Install Linux dependencies
      run: |
        sudo apt-get install openmpi-bin libopenmpi-dev libopenblas-dev
        pip install mpi4py
        pip install petsc petsc4py
      env:
        PETSC_CONFIGURE_OPTIONS: '--download-mumps --download-scalapack'
      if: matrix.os == 'ubuntu-latest'

    - name: Lint with flake8
      run: |
        flake8 . --count --show-source --statistics

    - name: Clone JaDaPy
      uses: actions/checkout@v3
      with:
        repository: BIMAU/jadapy
        path: jadapy

    - name: Install JaDaPy
      run: |
        cd jadapy
        pip install .

    - name: Test with pytest
      run: |
        pytest -v -o console_output_style=classic --enable-example-tests tests

    - name: Run parallel tests
      run: |
        mpiexec --oversubscribe -n 4 pytest -v -o console_output_style=classic tests
      if: matrix.os == 'ubuntu-latest'
